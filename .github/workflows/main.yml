name: Auto Merge Workflow

on:
  push:
    branches:
      - '**'  # Trigger this workflow for all branches

jobs:
  merge:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Optional: Set up Git with custom user if needed
      - name: Set up Git with custom user
        run: |
          git config --global user.name "Your Custom Bot Name"
          git config --global user.email "your-email@example.com"

      # Step 2: Fetch the development branch to check if we can merge
      - name: Fetch Development Branch
        run: git fetch origin development

      # Step 3: Attempt to merge the pushed branch into development
      - name: Merge branch to development
        run: |
          git checkout development
          git pull origin development
          git merge --no-ff ${{ github.ref_name }}

      # Step 4: Check for merge conflicts
      - name: Check for Merge Conflicts
        run: |
          $conflictFiles = git ls-files -u
          if ($conflictFiles) {
            echo "Merge conflict detected. Please resolve conflicts before merging." >> $env:GITHUB_ENV
            exit 1
          }

      # Step 5: If no conflicts, push the merge to development
      - name: Push merged code to development
        if: success()
        run: |
          git push origin development
          echo "Successfully merged branch ${{ github.ref_name }} into development."

  send-merge-conflict-message:
    if: failure()  # This will run if there is a merge conflict
    runs-on: windows-latest
    steps:
      - name: Send message to user
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d '{"body": "Merge conflict detected on branch ${{ github.ref_name }}. Please resolve conflicts and push again."}' \
            https://api.github.com/repos/${{ github.repository }}/issues/1/comments
