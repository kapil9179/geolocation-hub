name: Auto Merge Workflow

on:
  push:
    branches:
      - '**'  # Trigger this workflow for all branches

jobs:
  merge:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for better conflict detection

      # Step 2: Set up Git
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Fetch all branches
      - name: Fetch all branches
        run: git fetch --all

      # Step 4: Try to merge
      - name: Attempt merge
        run: |
          git checkout development
          git pull origin development
          if git merge --no-ff ${{ github.ref_name }}; then
            echo "MERGE_SUCCESS=true" >> $env:GITHUB_ENV
          else
            echo "MERGE_SUCCESS=false" >> $env:GITHUB_ENV
            git merge --abort
          fi

      # Step 5: Push if merge successful
      - name: Push merged code
        if: env.MERGE_SUCCESS == 'true'
        run: |
          git push origin development
          echo "Successfully merged branch ${{ github.ref_name }} into development"

  notify:
    needs: merge
    runs-on: windows-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Send appropriate notification
      - name: Send notification
        if: always()
        run: |
          if [ "${{ needs.merge.result }}" == "success" ]; then
            # Send success message
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{"body": "✅ Successfully merged branch ${{ github.ref_name }} into development branch."}' \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
          else
            # Send conflict message
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{"body": "❌ Merge conflict detected on branch ${{ github.ref_name }}. Please resolve conflicts and push again."}' \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
          fi
