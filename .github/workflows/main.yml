name: Auto Merge Workflow

on:
  push:
    branches:
      - '**'

permissions:
  contents: write

jobs:
  merge:
    runs-on: windows-latest
    outputs:
      merge_status: ${{ steps.check-merge.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all branches
        run: git fetch --all

      - name: Attempt merge
        id: check-merge
        run: |
          git checkout development
          git pull origin development
          $branchName = "${{ github.ref_name }}"
          git merge --no-ff origin/$branchName
          if ($LASTEXITCODE -eq 0) {
            echo "result=success" >> $env:GITHUB_OUTPUT
          } else {
            git merge --abort
            echo "result=conflict" >> $env:GITHUB_OUTPUT
          }

      - name: Push if merge successful
        if: steps.check-merge.outputs.result == 'success'
        run: |
          git push origin development
          echo "✅ Successfully merged branch '${{ github.ref_name }}' into development."

  notify:
    needs: merge
    runs-on: windows-latest
    steps:
      - name: Send notification
        run: |
          if ("${{ needs.merge.outputs.merge_status }}" -eq "success") {
            echo "✅ Merge successful for branch ${{ github.ref_name }}"
          } else {
            echo "❌ Merge conflict in branch ${{ github.ref_name }}. Please resolve and push again."
          }


